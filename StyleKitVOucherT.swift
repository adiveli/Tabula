//
//  StyleKitVOucherT.swift
//
//  Created on Nov 13, 2018.
//
//  Generated by PaintCode Plugin for Sketch
//  http://www.paintcodeapp.com/sketch
//

import UIKit



class StyleKitVOucherT: NSObject {
    
    
    //MARK: - Canvas Drawings
    
    /// Page 1
    
    class func drawVoucherType1(frame targetFrame: CGRect = CGRect(x: 0, y: 0, width: 333, height: 200), resizing: ResizingBehavior = .aspectFit) {
        /// General Declarations
        let context = UIGraphicsGetCurrentContext()!
        
        /// Resize to Target Frame
        context.saveGState()
        let resizedFrame = resizing.apply(rect: CGRect(x: 0, y: 0, width: 333, height: 200), target: targetFrame)
        context.translateBy(x: resizedFrame.minX, y: resizedFrame.minY)
        context.scaleBy(x: resizedFrame.width / 333, y: resizedFrame.height / 200)
        
        /// CardType1
        do {
            context.saveGState()
            
            /// Rectangle
            let rectangle = UIBezierPath()
            rectangle.move(to: CGPoint(x: 8, y: 0))
            rectangle.addLine(to: CGPoint(x: 324, y: 0))
            rectangle.addCurve(to: CGPoint(x: 332, y: 8), controlPoint1: CGPoint(x: 328.42, y: 0), controlPoint2: CGPoint(x: 332, y: 3.58))
            rectangle.addLine(to: CGPoint(x: 332, y: 192))
            rectangle.addCurve(to: CGPoint(x: 324, y: 200), controlPoint1: CGPoint(x: 332, y: 196.42), controlPoint2: CGPoint(x: 328.42, y: 200))
            rectangle.addLine(to: CGPoint(x: 8, y: 200))
            rectangle.addCurve(to: CGPoint(x: 0, y: 192), controlPoint1: CGPoint(x: 3.58, y: 200), controlPoint2: CGPoint(x: 0, y: 196.42))
            rectangle.addLine(to: CGPoint(x: 0, y: 8))
            rectangle.addCurve(to: CGPoint(x: 8, y: 0), controlPoint1: CGPoint(x: 0, y: 3.58), controlPoint2: CGPoint(x: 3.58, y: 0))
            rectangle.close()
            context.saveGState()
            context.saveGState()
            rectangle.lineWidth = 2
            context.beginPath()
            context.addPath(rectangle.cgPath)
            context.clip(using: .evenOdd)
            UIColor.black.setStroke()
            rectangle.stroke()
            context.restoreGState()
            context.restoreGState()
            
            /// noun_Coupon_1606667
            do {
                context.saveGState()
                context.translateBy(x: 26, y: 159)
                
                /// Path
                let path = UIBezierPath()
                path.move(to: CGPoint(x: 28, y: 0.02))
                path.addLine(to: CGPoint(x: 22.7, y: 0.01))
                path.addLine(to: CGPoint(x: 22.35, y: 0.01))
                path.addCurve(to: CGPoint(x: 21.97, y: 0.02), controlPoint1: CGPoint(x: 22.22, y: 0.01), controlPoint2: CGPoint(x: 22.1, y: 0.01))
                path.addCurve(to: CGPoint(x: 21.19, y: 0.13), controlPoint1: CGPoint(x: 21.71, y: 0.04), controlPoint2: CGPoint(x: 21.45, y: 0.08))
                path.addCurve(to: CGPoint(x: 19.71, y: 0.66), controlPoint1: CGPoint(x: 20.68, y: 0.24), controlPoint2: CGPoint(x: 20.18, y: 0.42))
                path.addCurve(to: CGPoint(x: 18.04, y: 1.94), controlPoint1: CGPoint(x: 19.09, y: 0.99), controlPoint2: CGPoint(x: 18.52, y: 1.42))
                path.addCurve(to: CGPoint(x: 16.86, y: 0.93), controlPoint1: CGPoint(x: 17.69, y: 1.56), controlPoint2: CGPoint(x: 17.29, y: 1.22))
                path.addCurve(to: CGPoint(x: 14.38, y: 0.04), controlPoint1: CGPoint(x: 16.1, y: 0.45), controlPoint2: CGPoint(x: 15.26, y: 0.15))
                path.addCurve(to: CGPoint(x: 13.72, y: 0), controlPoint1: CGPoint(x: 14.16, y: 0.02), controlPoint2: CGPoint(x: 13.94, y: 0))
                path.addLine(to: CGPoint(x: 9.72, y: 0))
                path.addLine(to: CGPoint(x: 0.78, y: 0.03))
                path.addCurve(to: CGPoint(x: 0.22, y: 0.27), controlPoint1: CGPoint(x: 0.57, y: 0.03), controlPoint2: CGPoint(x: 0.37, y: 0.12))
                path.addCurve(to: CGPoint(x: 0, y: 0.84), controlPoint1: CGPoint(x: 0.08, y: 0.42), controlPoint2: CGPoint(x: -0, y: 0.63))
                path.addCurve(to: CGPoint(x: 0.15, y: 21.29), controlPoint1: CGPoint(x: 0.03, y: 8.3), controlPoint2: CGPoint(x: 0.08, y: 15.36))
                path.addLine(to: CGPoint(x: 0.15, y: 21.3))
                path.addCurve(to: CGPoint(x: 0.78, y: 21.94), controlPoint1: CGPoint(x: 0.16, y: 21.66), controlPoint2: CGPoint(x: 0.43, y: 21.94))
                path.addCurve(to: CGPoint(x: 13.09, y: 21.71), controlPoint1: CGPoint(x: 5.76, y: 21.88), controlPoint2: CGPoint(x: 9.95, y: 21.8))
                path.addCurve(to: CGPoint(x: 13.68, y: 21.26), controlPoint1: CGPoint(x: 13.43, y: 21.71), controlPoint2: CGPoint(x: 13.68, y: 21.49))
                path.addCurve(to: CGPoint(x: 13.09, y: 20.87), controlPoint1: CGPoint(x: 13.68, y: 21.02), controlPoint2: CGPoint(x: 13.41, y: 20.88))
                path.addCurve(to: CGPoint(x: 1.41, y: 20.64), controlPoint1: CGPoint(x: 10.08, y: 20.78), controlPoint2: CGPoint(x: 6.11, y: 20.7))
                path.addCurve(to: CGPoint(x: 1.55, y: 1.65), controlPoint1: CGPoint(x: 1.48, y: 15.07), controlPoint2: CGPoint(x: 1.52, y: 8.54))
                path.addLine(to: CGPoint(x: 9.72, y: 1.67))
                path.addLine(to: CGPoint(x: 13.7, y: 1.67))
                path.addCurve(to: CGPoint(x: 14.18, y: 1.71), controlPoint1: CGPoint(x: 13.86, y: 1.68), controlPoint2: CGPoint(x: 14.02, y: 1.69))
                path.addCurve(to: CGPoint(x: 17.36, y: 3.73), controlPoint1: CGPoint(x: 15.48, y: 1.86), controlPoint2: CGPoint(x: 16.64, y: 2.61))
                path.addCurve(to: CGPoint(x: 17.6, y: 3.97), controlPoint1: CGPoint(x: 17.43, y: 3.83), controlPoint2: CGPoint(x: 17.5, y: 3.91))
                path.addCurve(to: CGPoint(x: 18.21, y: 4.09), controlPoint1: CGPoint(x: 17.77, y: 4.09), controlPoint2: CGPoint(x: 17.99, y: 4.14))
                path.addCurve(to: CGPoint(x: 18.72, y: 3.73), controlPoint1: CGPoint(x: 18.42, y: 4.05), controlPoint2: CGPoint(x: 18.6, y: 3.92))
                path.addCurve(to: CGPoint(x: 20.44, y: 2.15), controlPoint1: CGPoint(x: 19.15, y: 3.06), controlPoint2: CGPoint(x: 19.74, y: 2.51))
                path.addCurve(to: CGPoint(x: 21.52, y: 1.76), controlPoint1: CGPoint(x: 20.78, y: 1.97), controlPoint2: CGPoint(x: 21.14, y: 1.84))
                path.addCurve(to: CGPoint(x: 22.08, y: 1.69), controlPoint1: CGPoint(x: 21.7, y: 1.72), controlPoint2: CGPoint(x: 21.89, y: 1.7))
                path.addCurve(to: CGPoint(x: 22.38, y: 1.69), controlPoint1: CGPoint(x: 22.18, y: 1.69), controlPoint2: CGPoint(x: 22.27, y: 1.69))
                path.addLine(to: CGPoint(x: 22.71, y: 1.69))
                path.addLine(to: CGPoint(x: 27.22, y: 1.69))
                path.addCurve(to: CGPoint(x: 27.35, y: 20.66), controlPoint1: CGPoint(x: 27.25, y: 8.64), controlPoint2: CGPoint(x: 27.29, y: 15.13))
                path.addLine(to: CGPoint(x: 24.69, y: 20.69))
                path.addLine(to: CGPoint(x: 23.21, y: 20.71))
                path.addLine(to: CGPoint(x: 22.52, y: 20.71))
                path.addCurve(to: CGPoint(x: 21.91, y: 20.69), controlPoint1: CGPoint(x: 22.31, y: 20.72), controlPoint2: CGPoint(x: 22.11, y: 20.71))
                path.addCurve(to: CGPoint(x: 19.84, y: 19.98), controlPoint1: CGPoint(x: 21.17, y: 20.63), controlPoint2: CGPoint(x: 20.46, y: 20.38))
                path.addCurve(to: CGPoint(x: 18.42, y: 18.6), controlPoint1: CGPoint(x: 19.28, y: 19.62), controlPoint2: CGPoint(x: 18.8, y: 19.15))
                path.addLine(to: CGPoint(x: 18.42, y: 18.58))
                path.addCurve(to: CGPoint(x: 18.02, y: 18.37), controlPoint1: CGPoint(x: 18.33, y: 18.45), controlPoint2: CGPoint(x: 18.18, y: 18.37))
                path.addCurve(to: CGPoint(x: 17.62, y: 18.6), controlPoint1: CGPoint(x: 17.86, y: 18.37), controlPoint2: CGPoint(x: 17.71, y: 18.46))
                path.addCurve(to: CGPoint(x: 14.18, y: 20.87), controlPoint1: CGPoint(x: 16.85, y: 19.83), controlPoint2: CGPoint(x: 15.6, y: 20.66))
                path.addCurve(to: CGPoint(x: 13.66, y: 21.34), controlPoint1: CGPoint(x: 13.89, y: 20.92), controlPoint2: CGPoint(x: 13.64, y: 21.1))
                path.addCurve(to: CGPoint(x: 14.25, y: 21.68), controlPoint1: CGPoint(x: 13.68, y: 21.57), controlPoint2: CGPoint(x: 13.96, y: 21.71))
                path.addCurve(to: CGPoint(x: 16.16, y: 21.15), controlPoint1: CGPoint(x: 14.92, y: 21.63), controlPoint2: CGPoint(x: 15.56, y: 21.45))
                path.addCurve(to: CGPoint(x: 18, y: 19.7), controlPoint1: CGPoint(x: 16.87, y: 20.8), controlPoint2: CGPoint(x: 17.49, y: 20.31))
                path.addCurve(to: CGPoint(x: 19.26, y: 20.89), controlPoint1: CGPoint(x: 18.36, y: 20.16), controlPoint2: CGPoint(x: 18.78, y: 20.56))
                path.addCurve(to: CGPoint(x: 21.78, y: 21.86), controlPoint1: CGPoint(x: 20.01, y: 21.42), controlPoint2: CGPoint(x: 20.88, y: 21.75))
                path.addCurve(to: CGPoint(x: 22.51, y: 21.9), controlPoint1: CGPoint(x: 22.02, y: 21.89), controlPoint2: CGPoint(x: 22.26, y: 21.9))
                path.addLine(to: CGPoint(x: 23.2, y: 21.9))
                path.addLine(to: CGPoint(x: 24.68, y: 21.92))
                path.addLine(to: CGPoint(x: 28, y: 21.95))
                path.addCurve(to: CGPoint(x: 28.45, y: 21.76), controlPoint1: CGPoint(x: 28.17, y: 21.95), controlPoint2: CGPoint(x: 28.33, y: 21.89))
                path.addCurve(to: CGPoint(x: 28.64, y: 21.3), controlPoint1: CGPoint(x: 28.57, y: 21.64), controlPoint2: CGPoint(x: 28.64, y: 21.48))
                path.addCurve(to: CGPoint(x: 28.79, y: 0.86), controlPoint1: CGPoint(x: 28.71, y: 15.42), controlPoint2: CGPoint(x: 28.76, y: 8.39))
                path.addCurve(to: CGPoint(x: 28.56, y: 0.27), controlPoint1: CGPoint(x: 28.79, y: 0.64), controlPoint2: CGPoint(x: 28.71, y: 0.42))
                path.addCurve(to: CGPoint(x: 28, y: 0.02), controlPoint1: CGPoint(x: 28.42, y: 0.11), controlPoint2: CGPoint(x: 28.21, y: 0.02))
                path.close()
                context.saveGState()
                context.translateBy(x: 0.11, y: 0.02)
                path.usesEvenOddFillRule = true
                UIColor.black.setFill()
                path.fill()
                context.restoreGState()
                
                /// Path
                let path2 = UIBezierPath()
                path2.move(to: CGPoint(x: 0.42, y: 2.25))
                path2.addCurve(to: CGPoint(x: 0.84, y: 2.25), controlPoint1: CGPoint(x: 0.56, y: 2.26), controlPoint2: CGPoint(x: 0.7, y: 2.26))
                path2.addCurve(to: CGPoint(x: 1.21, y: 2.25), controlPoint1: CGPoint(x: 0.96, y: 2.26), controlPoint2: CGPoint(x: 1.09, y: 2.26))
                path2.addCurve(to: CGPoint(x: 1.21, y: 0.01), controlPoint1: CGPoint(x: 1.76, y: 1.81), controlPoint2: CGPoint(x: 1.77, y: 0.46))
                path2.addCurve(to: CGPoint(x: 0.77, y: 0.01), controlPoint1: CGPoint(x: 1.06, y: -0), controlPoint2: CGPoint(x: 0.92, y: -0))
                path2.addCurve(to: CGPoint(x: 0.4, y: 0.01), controlPoint1: CGPoint(x: 0.65, y: -0), controlPoint2: CGPoint(x: 0.52, y: -0))
                path2.addCurve(to: CGPoint(x: 0.42, y: 2.25), controlPoint1: CGPoint(x: -0.14, y: 0.44), controlPoint2: CGPoint(x: -0.13, y: 1.79))
                path2.close()
                context.saveGState()
                context.translateBy(x: 17.34, y: 9.97)
                path2.usesEvenOddFillRule = true
                UIColor.black.setFill()
                path2.fill()
                context.restoreGState()
                
                /// Path
                let path3 = UIBezierPath()
                path3.move(to: CGPoint(x: 0.41, y: 2.25))
                path3.addCurve(to: CGPoint(x: 0.84, y: 2.25), controlPoint1: CGPoint(x: 0.56, y: 2.26), controlPoint2: CGPoint(x: 0.7, y: 2.26))
                path3.addCurve(to: CGPoint(x: 1.21, y: 2.25), controlPoint1: CGPoint(x: 0.96, y: 2.26), controlPoint2: CGPoint(x: 1.08, y: 2.26))
                path3.addCurve(to: CGPoint(x: 1.21, y: 0.01), controlPoint1: CGPoint(x: 1.76, y: 1.81), controlPoint2: CGPoint(x: 1.76, y: 0.46))
                path3.addCurve(to: CGPoint(x: 0.77, y: 0.01), controlPoint1: CGPoint(x: 1.06, y: -0), controlPoint2: CGPoint(x: 0.92, y: -0))
                path3.addCurve(to: CGPoint(x: 0.41, y: 0.01), controlPoint1: CGPoint(x: 0.65, y: 0), controlPoint2: CGPoint(x: 0.53, y: 0))
                path3.addCurve(to: CGPoint(x: 0.41, y: 2.25), controlPoint1: CGPoint(x: -0.14, y: 0.46), controlPoint2: CGPoint(x: -0.14, y: 1.81))
                path3.close()
                context.saveGState()
                context.translateBy(x: 17.34, y: 14.04)
                path3.usesEvenOddFillRule = true
                UIColor.black.setFill()
                path3.fill()
                context.restoreGState()
                
                /// Path
                let path4 = UIBezierPath()
                path4.move(to: CGPoint(x: 0.42, y: 2.25))
                path4.addCurve(to: CGPoint(x: 0.84, y: 2.25), controlPoint1: CGPoint(x: 0.56, y: 2.26), controlPoint2: CGPoint(x: 0.7, y: 2.26))
                path4.addCurve(to: CGPoint(x: 1.21, y: 2.25), controlPoint1: CGPoint(x: 0.96, y: 2.26), controlPoint2: CGPoint(x: 1.09, y: 2.26))
                path4.addCurve(to: CGPoint(x: 1.21, y: 0.01), controlPoint1: CGPoint(x: 1.76, y: 1.81), controlPoint2: CGPoint(x: 1.77, y: 0.46))
                path4.addCurve(to: CGPoint(x: 0.77, y: 0.01), controlPoint1: CGPoint(x: 1.06, y: -0), controlPoint2: CGPoint(x: 0.92, y: -0))
                path4.addCurve(to: CGPoint(x: 0.4, y: 0.01), controlPoint1: CGPoint(x: 0.65, y: -0), controlPoint2: CGPoint(x: 0.52, y: -0))
                path4.addCurve(to: CGPoint(x: 0.42, y: 2.25), controlPoint1: CGPoint(x: -0.14, y: 0.46), controlPoint2: CGPoint(x: -0.13, y: 1.8))
                path4.close()
                context.saveGState()
                context.translateBy(x: 17.34, y: 5.88)
                path4.usesEvenOddFillRule = true
                UIColor.black.setFill()
                path4.fill()
                context.restoreGState()
                
                /// Path
                let path5 = UIBezierPath()
                path5.move(to: CGPoint(x: 0.29, y: 8.13))
                path5.addCurve(to: CGPoint(x: 0.62, y: 8.31), controlPoint1: CGPoint(x: 0.45, y: 8.25), controlPoint2: CGPoint(x: 0.59, y: 8.33))
                path5.addCurve(to: CGPoint(x: 6.42, y: 0.5), controlPoint1: CGPoint(x: 2.21, y: 7.09), controlPoint2: CGPoint(x: 5.7, y: 2.4))
                path5.addCurve(to: CGPoint(x: 6.12, y: 0.19), controlPoint1: CGPoint(x: 6.42, y: 0.46), controlPoint2: CGPoint(x: 6.29, y: 0.32))
                path5.addCurve(to: CGPoint(x: 5.79, y: 0), controlPoint1: CGPoint(x: 5.95, y: 0.07), controlPoint2: CGPoint(x: 5.83, y: -0.02))
                path5.addCurve(to: CGPoint(x: 0, y: 7.83), controlPoint1: CGPoint(x: 4.2, y: 1.22), controlPoint2: CGPoint(x: 0.72, y: 5.92))
                path5.addCurve(to: CGPoint(x: 0.29, y: 8.13), controlPoint1: CGPoint(x: -0.03, y: 7.85), controlPoint2: CGPoint(x: 0.11, y: 7.99))
                path5.close()
                context.saveGState()
                context.translateBy(x: 6.15, y: 6.94)
                path5.usesEvenOddFillRule = true
                UIColor.black.setFill()
                path5.fill()
                context.restoreGState()
                
                /// Path
                let path6 = UIBezierPath()
                path6.move(to: CGPoint(x: 2.19, y: 0.86))
                path6.addCurve(to: CGPoint(x: 2.24, y: 0.41), controlPoint1: CGPoint(x: 2.23, y: 0.71), controlPoint2: CGPoint(x: 2.25, y: 0.56))
                path6.addCurve(to: CGPoint(x: 2.16, y: 0.02), controlPoint1: CGPoint(x: 2.24, y: 0.19), controlPoint2: CGPoint(x: 2.2, y: 0.03))
                path6.addCurve(to: CGPoint(x: 0.93, y: 0.31), controlPoint1: CGPoint(x: 1.73, y: -0.04), controlPoint2: CGPoint(x: 1.29, y: 0.06))
                path6.addCurve(to: CGPoint(x: 0.02, y: 1.84), controlPoint1: CGPoint(x: 0.42, y: 0.66), controlPoint2: CGPoint(x: 0.09, y: 1.22))
                path6.addLine(to: CGPoint(x: 0.01, y: 2.06))
                path6.addLine(to: CGPoint(x: 0.01, y: 2.24))
                path6.addCurve(to: CGPoint(x: 0.01, y: 2.67), controlPoint1: CGPoint(x: -0, y: 2.38), controlPoint2: CGPoint(x: -0, y: 2.53))
                path6.addCurve(to: CGPoint(x: 0.33, y: 3.77), controlPoint1: CGPoint(x: 0.02, y: 3.06), controlPoint2: CGPoint(x: 0.13, y: 3.44))
                path6.addCurve(to: CGPoint(x: 1.72, y: 4.82), controlPoint1: CGPoint(x: 0.64, y: 4.3), controlPoint2: CGPoint(x: 1.14, y: 4.68))
                path6.addCurve(to: CGPoint(x: 2.01, y: 4.88), controlPoint1: CGPoint(x: 1.82, y: 4.85), controlPoint2: CGPoint(x: 1.92, y: 4.86))
                path6.addCurve(to: CGPoint(x: 2.3, y: 4.88), controlPoint1: CGPoint(x: 2.11, y: 4.88), controlPoint2: CGPoint(x: 2.23, y: 4.88))
                path6.addCurve(to: CGPoint(x: 4.23, y: 3.73), controlPoint1: CGPoint(x: 3.09, y: 4.87), controlPoint2: CGPoint(x: 3.82, y: 4.43))
                path6.addCurve(to: CGPoint(x: 4.52, y: 2.62), controlPoint1: CGPoint(x: 4.42, y: 3.39), controlPoint2: CGPoint(x: 4.52, y: 3.01))
                path6.addLine(to: CGPoint(x: 4.52, y: 2.49))
                path6.addLine(to: CGPoint(x: 4.52, y: 2.4))
                path6.addLine(to: CGPoint(x: 4.52, y: 2.21))
                path6.addLine(to: CGPoint(x: 4.52, y: 2.03))
                path6.addLine(to: CGPoint(x: 4.5, y: 1.79))
                path6.addCurve(to: CGPoint(x: 3.57, y: 0.28), controlPoint1: CGPoint(x: 4.42, y: 1.17), controlPoint2: CGPoint(x: 4.08, y: 0.62))
                path6.addCurve(to: CGPoint(x: 2.33, y: 0.03), controlPoint1: CGPoint(x: 3.2, y: 0.04), controlPoint2: CGPoint(x: 2.76, y: -0.05))
                path6.addCurve(to: CGPoint(x: 2.27, y: 0.46), controlPoint1: CGPoint(x: 2.28, y: 0.03), controlPoint2: CGPoint(x: 2.27, y: 0.23))
                path6.addCurve(to: CGPoint(x: 2.32, y: 0.84), controlPoint1: CGPoint(x: 2.26, y: 0.59), controlPoint2: CGPoint(x: 2.28, y: 0.72))
                path6.addCurve(to: CGPoint(x: 2.86, y: 1.23), controlPoint1: CGPoint(x: 2.53, y: 0.92), controlPoint2: CGPoint(x: 2.72, y: 1.05))
                path6.addCurve(to: CGPoint(x: 3.09, y: 1.91), controlPoint1: CGPoint(x: 3.02, y: 1.42), controlPoint2: CGPoint(x: 3.11, y: 1.66))
                path6.addLine(to: CGPoint(x: 3.09, y: 2.03))
                path6.addLine(to: CGPoint(x: 3.09, y: 2.21))
                path6.addLine(to: CGPoint(x: 3.09, y: 2.39))
                path6.addLine(to: CGPoint(x: 3.09, y: 2.49))
                path6.addCurve(to: CGPoint(x: 3.09, y: 2.54), controlPoint1: CGPoint(x: 3.09, y: 2.51), controlPoint2: CGPoint(x: 3.09, y: 2.52))
                path6.addCurve(to: CGPoint(x: 2.96, y: 2.88), controlPoint1: CGPoint(x: 3.08, y: 2.66), controlPoint2: CGPoint(x: 3.03, y: 2.78))
                path6.addCurve(to: CGPoint(x: 2.34, y: 3.21), controlPoint1: CGPoint(x: 2.82, y: 3.09), controlPoint2: CGPoint(x: 2.59, y: 3.21))
                path6.addLine(to: CGPoint(x: 2.16, y: 3.21))
                path6.addCurve(to: CGPoint(x: 2.07, y: 3.2), controlPoint1: CGPoint(x: 2.13, y: 3.21), controlPoint2: CGPoint(x: 2.1, y: 3.21))
                path6.addCurve(to: CGPoint(x: 1.9, y: 3.14), controlPoint1: CGPoint(x: 2.01, y: 3.18), controlPoint2: CGPoint(x: 1.95, y: 3.16))
                path6.addCurve(to: CGPoint(x: 1.63, y: 2.9), controlPoint1: CGPoint(x: 1.79, y: 3.08), controlPoint2: CGPoint(x: 1.7, y: 3))
                path6.addCurve(to: CGPoint(x: 1.49, y: 2.56), controlPoint1: CGPoint(x: 1.55, y: 2.8), controlPoint2: CGPoint(x: 1.51, y: 2.68))
                path6.addCurve(to: CGPoint(x: 1.44, y: 1.95), controlPoint1: CGPoint(x: 1.47, y: 2.45), controlPoint2: CGPoint(x: 1.45, y: 2.05))
                path6.addCurve(to: CGPoint(x: 1.65, y: 1.26), controlPoint1: CGPoint(x: 1.42, y: 1.7), controlPoint2: CGPoint(x: 1.5, y: 1.45))
                path6.addCurve(to: CGPoint(x: 2.19, y: 0.86), controlPoint1: CGPoint(x: 1.8, y: 1.08), controlPoint2: CGPoint(x: 1.98, y: 0.94))
                path6.close()
                context.saveGState()
                context.translateBy(x: 3.76, y: 5.89)
                path6.usesEvenOddFillRule = true
                UIColor.black.setFill()
                path6.fill()
                context.restoreGState()
                
                /// Path
                let path7 = UIBezierPath()
                path7.move(to: CGPoint(x: 0.3, y: 3.79))
                path7.addCurve(to: CGPoint(x: 1.71, y: 4.84), controlPoint1: CGPoint(x: 0.62, y: 4.32), controlPoint2: CGPoint(x: 1.12, y: 4.7))
                path7.addCurve(to: CGPoint(x: 2.01, y: 4.89), controlPoint1: CGPoint(x: 1.81, y: 4.86), controlPoint2: CGPoint(x: 1.91, y: 4.88))
                path7.addCurve(to: CGPoint(x: 2.29, y: 4.89), controlPoint1: CGPoint(x: 2.1, y: 4.89), controlPoint2: CGPoint(x: 2.22, y: 4.89))
                path7.addCurve(to: CGPoint(x: 4.25, y: 3.72), controlPoint1: CGPoint(x: 3.1, y: 4.89), controlPoint2: CGPoint(x: 3.84, y: 4.45))
                path7.addCurve(to: CGPoint(x: 4.54, y: 2.62), controlPoint1: CGPoint(x: 4.44, y: 3.39), controlPoint2: CGPoint(x: 4.54, y: 3.01))
                path7.addLine(to: CGPoint(x: 4.54, y: 2.48))
                path7.addLine(to: CGPoint(x: 4.54, y: 2.39))
                path7.addLine(to: CGPoint(x: 4.54, y: 2.21))
                path7.addLine(to: CGPoint(x: 4.54, y: 2.03))
                path7.addLine(to: CGPoint(x: 4.52, y: 1.79))
                path7.addCurve(to: CGPoint(x: 3.58, y: 0.28), controlPoint1: CGPoint(x: 4.44, y: 1.16), controlPoint2: CGPoint(x: 4.1, y: 0.61))
                path7.addCurve(to: CGPoint(x: 2.3, y: 0.04), controlPoint1: CGPoint(x: 3.2, y: 0.03), controlPoint2: CGPoint(x: 2.74, y: -0.06))
                path7.addCurve(to: CGPoint(x: 2.23, y: 0.48), controlPoint1: CGPoint(x: 2.25, y: 0.04), controlPoint2: CGPoint(x: 2.23, y: 0.25))
                path7.addCurve(to: CGPoint(x: 2.3, y: 0.85), controlPoint1: CGPoint(x: 2.23, y: 0.61), controlPoint2: CGPoint(x: 2.25, y: 0.73))
                path7.addCurve(to: CGPoint(x: 2.85, y: 1.24), controlPoint1: CGPoint(x: 2.51, y: 0.93), controlPoint2: CGPoint(x: 2.7, y: 1.06))
                path7.addCurve(to: CGPoint(x: 3.08, y: 1.93), controlPoint1: CGPoint(x: 3.01, y: 1.43), controlPoint2: CGPoint(x: 3.09, y: 1.68))
                path7.addLine(to: CGPoint(x: 3.08, y: 2.04))
                path7.addLine(to: CGPoint(x: 3.08, y: 2.22))
                path7.addLine(to: CGPoint(x: 3.08, y: 2.41))
                path7.addLine(to: CGPoint(x: 3.08, y: 2.5))
                path7.addCurve(to: CGPoint(x: 3.08, y: 2.55), controlPoint1: CGPoint(x: 3.08, y: 2.53), controlPoint2: CGPoint(x: 3.08, y: 2.53))
                path7.addCurve(to: CGPoint(x: 2.89, y: 2.89), controlPoint1: CGPoint(x: 3.04, y: 2.68), controlPoint2: CGPoint(x: 2.98, y: 2.79))
                path7.addCurve(to: CGPoint(x: 2.28, y: 3.22), controlPoint1: CGPoint(x: 2.75, y: 3.09), controlPoint2: CGPoint(x: 2.52, y: 3.22))
                path7.addLine(to: CGPoint(x: 2.17, y: 3.22))
                path7.addCurve(to: CGPoint(x: 2.08, y: 3.2), controlPoint1: CGPoint(x: 2.14, y: 3.22), controlPoint2: CGPoint(x: 2.11, y: 3.22))
                path7.addCurve(to: CGPoint(x: 1.91, y: 3.14), controlPoint1: CGPoint(x: 2.02, y: 3.19), controlPoint2: CGPoint(x: 1.97, y: 3.17))
                path7.addCurve(to: CGPoint(x: 1.64, y: 2.9), controlPoint1: CGPoint(x: 1.8, y: 3.09), controlPoint2: CGPoint(x: 1.71, y: 3))
                path7.addCurve(to: CGPoint(x: 1.49, y: 2.58), controlPoint1: CGPoint(x: 1.57, y: 2.81), controlPoint2: CGPoint(x: 1.52, y: 2.7))
                path7.addCurve(to: CGPoint(x: 1.45, y: 1.97), controlPoint1: CGPoint(x: 1.48, y: 2.47), controlPoint2: CGPoint(x: 1.46, y: 2.07))
                path7.addCurve(to: CGPoint(x: 1.66, y: 1.28), controlPoint1: CGPoint(x: 1.43, y: 1.72), controlPoint2: CGPoint(x: 1.51, y: 1.47))
                path7.addCurve(to: CGPoint(x: 2.19, y: 0.89), controlPoint1: CGPoint(x: 1.8, y: 1.11), controlPoint2: CGPoint(x: 1.99, y: 0.97))
                path7.addCurve(to: CGPoint(x: 2.24, y: 0.44), controlPoint1: CGPoint(x: 2.23, y: 0.74), controlPoint2: CGPoint(x: 2.25, y: 0.59))
                path7.addCurve(to: CGPoint(x: 2.16, y: 0.05), controlPoint1: CGPoint(x: 2.24, y: 0.22), controlPoint2: CGPoint(x: 2.2, y: 0.06))
                path7.addCurve(to: CGPoint(x: 0.93, y: 0.34), controlPoint1: CGPoint(x: 1.73, y: -0.01), controlPoint2: CGPoint(x: 1.29, y: 0.09))
                path7.addCurve(to: CGPoint(x: 0.02, y: 1.87), controlPoint1: CGPoint(x: 0.42, y: 0.69), controlPoint2: CGPoint(x: 0.09, y: 1.25))
                path7.addLine(to: CGPoint(x: 0.01, y: 2.09))
                path7.addLine(to: CGPoint(x: 0.01, y: 2.27))
                path7.addCurve(to: CGPoint(x: 0.01, y: 2.7), controlPoint1: CGPoint(x: -0, y: 2.41), controlPoint2: CGPoint(x: -0, y: 2.56))
                path7.addCurve(to: CGPoint(x: 0.3, y: 3.79), controlPoint1: CGPoint(x: 0.02, y: 3.08), controlPoint2: CGPoint(x: 0.12, y: 3.46))
                path7.close()
                context.saveGState()
                context.translateBy(x: 10.42, y: 11.78)
                path7.usesEvenOddFillRule = true
                UIColor.black.setFill()
                path7.fill()
                context.restoreGState()
                
                context.restoreGState()
            }
            
            /// Line 8
            let line8 = UIBezierPath()
            line8.move(to: CGPoint.zero)
            line8.addLine(to: CGPoint(x: 332, y: 0))
            context.saveGState()
            context.translateBy(x: 0, y: 138)
            line8.lineCapStyle = .round
            line8.setLineDash([5], count: 1, phase: 0)
            line8.lineWidth = 2
            UIColor.white.setStroke()
            line8.stroke()
            context.restoreGState()
            
            context.restoreGState()
        }
        
        context.restoreGState()
    }
    
    
    //MARK: - Canvas Images
    
    /// Page 1
    
    class func imageOfVoucherType1() -> UIImage {
        struct LocalCache {
            static var image: UIImage!
        }
        if LocalCache.image != nil {
            return LocalCache.image
        }
        var image: UIImage
        
        UIGraphicsBeginImageContextWithOptions(CGSize(width: 333, height: 200), false, 0)
        StyleKitVOucherT.drawVoucherType1()
        image = UIGraphicsGetImageFromCurrentImageContext()!
        UIGraphicsEndImageContext()
        
        LocalCache.image = image
        return image
    }
    
    
    //MARK: - Resizing Behavior
    
    enum ResizingBehavior {
        case aspectFit /// The content is proportionally resized to fit into the target rectangle.
        case aspectFill /// The content is proportionally resized to completely fill the target rectangle.
        case stretch /// The content is stretched to match the entire target rectangle.
        case center /// The content is centered in the target rectangle, but it is NOT resized.
        
        func apply(rect: CGRect, target: CGRect) -> CGRect {
            if rect == target || target == CGRect.zero {
                return rect
            }
            
            var scales = CGSize.zero
            scales.width = abs(target.width / rect.width)
            scales.height = abs(target.height / rect.height)
            
            switch self {
                case .aspectFit:
                    scales.width = min(scales.width, scales.height)
                    scales.height = scales.width
                case .aspectFill:
                    scales.width = max(scales.width, scales.height)
                    scales.height = scales.width
                case .stretch:
                    break
                case .center:
                    scales.width = 1
                    scales.height = 1
            }
            
            var result = rect.standardized
            result.size.width *= scales.width
            result.size.height *= scales.height
            result.origin.x = target.minX + (target.width - result.width) / 2
            result.origin.y = target.minY + (target.height - result.height) / 2
            return result
        }
    }
    
    
}
